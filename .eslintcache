[{"/Users/fred/Projects/weather/src/App.js":"1","/Users/fred/Projects/weather/src/components/main.js":"2","/Users/fred/Projects/weather/src/apis/api.js":"3","/Users/fred/Projects/weather/src/index.js":"4","/Users/fred/Projects/weather/src/components/card.js":"5","/Users/fred/Projects/weather/src/components/selectedPage.js":"6","/Users/fred/Projects/weather/src/components/search.js":"7"},{"size":214,"mtime":1607019215562,"results":"8","hashOfConfig":"9"},{"size":2396,"mtime":1607792219762,"results":"10","hashOfConfig":"9"},{"size":2769,"mtime":1607006240701,"results":"11","hashOfConfig":"9"},{"size":219,"mtime":1607250341805,"results":"12","hashOfConfig":"9"},{"size":2438,"mtime":1607779497389,"results":"13","hashOfConfig":"9"},{"size":2835,"mtime":1607780729219,"results":"14","hashOfConfig":"9"},{"size":407,"mtime":1605823303782,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j87zj7",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fred/Projects/weather/src/App.js",[],"/Users/fred/Projects/weather/src/components/main.js",["33","34","35"],"import React, { useState, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport Card from \"./card\";\nimport Search from \"./search\";\nimport SelectedPage from \"./selectedPage\";\n\nconst Main = () => {\n  // const [value, setState] = useState(false);\n  const [favCities, setFavCities] = useState([]);\n  const [currentCity, setCurrentCity] = useState(\"accra\");\n  const [cardData, setcardData] = useState([]);\n  const [selectedData, setSelectedData] = useState({});\n\n  useEffect(() => {\n    setCurrentCity(\"accra\");\n    setFavCities([\"london\", \"new york\", \"dublin\", \"los angeles\", \"dubai\"]);\n  }, []);\n\n  const handleCardState = useCallback((cardState) => {\n    const data = () => {\n      if (cardState.isLoaded === true) {\n        return cardState.data;\n      }\n    };\n    setcardData((prevItems) => [...prevItems, data()]);\n    // setcardData(cardState);\n  }, []);\n\n  const onCLickHandler = (favCity) => {\n    const data = cardData.find((e) => e.name === favCity);\n\n    console.log(data);\n  };\n\n  //   };\n  // console.log(cardData);\n\n  const homePage = () => {\n    return (\n      <div className=\"bg-custom h-full v-screen bg-fixed px-10 py-20\">\n        <Search />\n        <div className=\"mb-8\">\n          <h1 className=\" text-xs text text-gray-400 mb-4\">Your Loaction</h1>\n          <div>\n            <div\n              onClick={() => {\n                // setState(true);\n                handleCardState();\n              }}\n            >\n              <Card city={currentCity} handleCard={handleCardState} />\n            </div>\n          </div>\n        </div>\n        <div>\n          <h1 className=\" text-xs text-gray-400 mb-4\">Recommended</h1>\n          <div>\n            {favCities.map((favCity) => {\n              return (\n                <div\n                  className=\"mb-6\"\n                  onClick={() => {\n                    // setState(true);\n                    onCLickHandler(favCity);\n                  }}\n                >\n                  <Card city={favCity} handleCard={handleCardState} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return homePage();\n\n  // const switchPage = (value) => {\n  //   if (value === true) {\n  //     return <SelectedPage setState={setState} cardState={cardData} />;\n  //   }\n  //   return homePage();\n  // };\n\n  // return switchPage(value);\n};\n\nexport default Main;\n","/Users/fred/Projects/weather/src/apis/api.js",["36"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\n\nconst GetUserLocation = () => {\n  const [location, setLocation] = React.useState();\n\n  const handleSuccess = (pos) => {\n    const { latitude, longitude } = pos.coords;\n\n    setLocation({\n      latitude,\n      longitude,\n    });\n  };\n\n  console.log(location);\n  React.useEffect(() => {\n    const { geolocation } = navigator;\n\n    // If the geolocation is not defined in the used browser we handle it as an error\n    if (!geolocation) {\n      React.setError(\"Geolocation is not supported.\");\n      return;\n    }\n\n    // Call Geolocation API\n    geolocation.getCurrentPosition(handleSuccess);\n  }, []);\n\n  return { location };\n\n  //   const [getLat, setGetLat] = React.useState(0);\n  //   const [getLon, setGetLon] = React.useState(0);\n  //   React.useEffect(() => {\n  //     navigator.geolocation.getCurrentPosition(function (position) {\n  //       setGetLat(position.coords.latitude);\n  //       setGetLon(position.coords.longitude);\n  //       const latitude = getLat;\n  //       const longitude = getLon;\n  //       console.log(latitude, longitude);\n  //       // console.log(\"Latitude is :\", getLat);\n  //       // console.log(\"Longitude is :\", getLon);\n  //     });\n  //   });\n};\n\n// const LoadCurrentLocation = () => {\n//   React.useEffect(() => {\n//     GetUserLocation.getLat();\n//     return () => {\n//       console.log(\"done\");\n//     };\n//   }, []);\n// };\n\nconst GetWeather = () => {\n  const [data, setData] = useState({});\n  const APIKey = \"c6d66f9957223df1a7e2d0b78a06e7a1\";\n\n  const cityname = \"Accra\";\n  //   api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid={API key}\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=${APIKey}`;\n\n  axios\n    .get(`${URL}`)\n    .then((res) => {\n      // console.log(res);\n\n      setData(res.data);\n    })\n    .catch((err) => {\n      console.error(\"cannot fetch from API\");\n    });\n\n  console.log(data);\n};\n\nexport default GetWeather;\n\n// const getWeather = async () => {\n//   const APIKey = \"c6d66f9957223df1a7e2d0b78a06e7a1\";\n//   const location = navigator.geolocation.getCurrentPosition(function (\n//     position\n//   ) {\n//     const Latitude = position.coords.latitude;\n//     const Longitude = position.coords.longitude;\n//     console.log(\"Latitude is :\", Latitude);\n//     console.log(\"Longitude is :\", Longitude);\n//   });\n\n//   const cityname = \"Accra\";\n//   const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=${APIKey}`;\n\n//   await axios\n//     .get(`${URL}`)\n//     .then((res) => {\n//       console.log(res);\n//       return res;\n//     })\n//     .catch((err) => {\n//       console.error(\"cannot fetch from API\");\n//     });\n// };\n\n// export default getWeather;\n","/Users/fred/Projects/weather/src/index.js",[],"/Users/fred/Projects/weather/src/components/card.js",["37","38"],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Card = ({ city, handleCard }) => {\n  const [data, setData] = useState({\n    data: {},\n    isLoaded: false,\n  });\n  const [temp, setTemp] = useState(0);\n  const [description, setDescription] = useState(0);\n  const [weahterPic, setWeahterPic] = useState(\"\");\n\n  // const [city, setCity] = useState();\n\n  const getWeather = () => {\n    // console.log(city);\n    const APIKey = \"c6d66f9957223df1a7e2d0b78a06e7a1\";\n\n    //   api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid={API key}\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${APIKey}&units=metric`;\n\n    axios\n      .get(`${URL}`)\n      .then((res) => {\n        // console.log(res);\n\n        setData({ data: res.data, isLoaded: true });\n      })\n      .catch((err) => {\n        console.error(\"cannot fetch from API\");\n      });\n\n    // console.log(data.coord);\n  };\n\n  useEffect(() => {\n    getWeather();\n    handleCard(data);\n    // console.log(data);\n  }, [data.isLoaded === true]);\n\n  useEffect(() => {\n    if (data.data.main) {\n      setTemp(data.data.main.temp);\n      // console.log(data.data.main.temp);\n    }\n\n    if (data.data.weather) {\n      setDescription(data.data.weather[0].description);\n      // console.log(data.data.weather[0].description);\n      if (data.data.weather[0].main === \"Clouds\") {\n        setWeahterPic(\n          \"card bg-white shadow-xl cloudy w-full  h-24 rounded-lg p-5\"\n        );\n      } else if (data.data.weather[0].main === \"Rain\") {\n        setWeahterPic(\n          \"card bg-white shadow-xl rainy w-full  h-24 rounded-lg p-5\"\n        );\n      } else if (data.data.weather[0].main === \"Snow\") {\n        setWeahterPic(\n          \"card bg-white shadow-xl snowy w-full  h-24 rounded-lg p-5\"\n        );\n      } else {\n        setWeahterPic(\n          \"card bg-white shadow-xl sunny w-full  h-24 rounded-lg p-5\"\n        );\n      }\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <div className={weahterPic}>\n        <div className=\"flex justify-between mt-6\">\n          <div className=\"text-white\">\n            <h2 className=\"font-bold text-sm\">{data.data.name}</h2>\n            <h3 className=\"text-xs font-normal\">{description}</h3>\n          </div>\n          <h1 className=\"font-bold text-xl\">{temp}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/Users/fred/Projects/weather/src/components/selectedPage.js",[],"/Users/fred/Projects/weather/src/components/search.js",[],{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":20},{"ruleId":"39","severity":1,"message":"43","line":12,"column":10,"nodeType":"41","messageId":"42","endLine":12,"endColumn":22},{"ruleId":"39","severity":1,"message":"44","line":12,"column":24,"nodeType":"41","messageId":"42","endLine":12,"endColumn":39},{"ruleId":"39","severity":1,"message":"45","line":4,"column":7,"nodeType":"41","messageId":"42","endLine":4,"endColumn":22},{"ruleId":"46","severity":1,"message":"47","line":42,"column":6,"nodeType":"48","endLine":42,"endColumn":30,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":42,"column":7,"nodeType":"51","endLine":42,"endColumn":29},"no-unused-vars","'SelectedPage' is defined but never used.","Identifier","unusedVar","'selectedData' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","'GetUserLocation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data', 'getWeather', and 'handleCard'. Either include them or remove the dependency array. If 'handleCard' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["52"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression",{"desc":"53","fix":"54"},"Update the dependencies array to be: [data, getWeather, handleCard]",{"range":"55","text":"56"},[1086,1110],"[data, getWeather, handleCard]"]